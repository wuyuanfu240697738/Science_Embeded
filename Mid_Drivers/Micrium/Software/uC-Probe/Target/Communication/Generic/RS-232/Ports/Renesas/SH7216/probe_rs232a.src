;********************************************************************************************************
;                                               uC/OS-III
;                                         The Real-Time Kernel
;
;
;                             (c) Copyright 1992-2007, Micrium, Weston, FL
;                                          All Rights Reserved
;
;                                       Probe RS232 Port for the
;                                        Renesas SH-2A FPU 7216
;
; File : probe_rs232a.src
; By   : Hong Soong
;********************************************************************************************************

        .INCLUDE    "os_cpu_a.inc"         ; Include OS_CTX_SAVE and OS_CTX_RESTORE macros
        
        .EXPORT _ProbeRS232RxISR
        .EXPORT _ProbeRS232TxISR
        .EXPORT _ProbeRS232EriISR
        .EXPORT _ProbeRS232TeiISR
        .IMPORT _OSIntNestingCtr
        .IMPORT _OSTCBCurPtr
        .IMPORT _OSIntExit
        .IMPORT _ProbeRS232_RxISRHandler
        .IMPORT _ProbeRS232_TxISRHandler
        .IMPORT _ProbeRS232_TeiISRHandler
        .IMPORT _ProbeRS232_EriISRHandler
        
        .SECTION    P,CODE,ALIGN=4

_ProbeRS232TxISR:
        
        OS_CTX_SAVE                         ; save processor registers on the stack

        mov.l   #_OSIntNestingCtr, r1       ; Set OSIntNestingCtr == 1 (interrupt nesting not supported)
        mov.l   #1, r2
        mov.b   r2, @r1
                
        mov.l    #_OSTCBCurPtr, r1          ; Save current task's SP into its TCB
        mov.l   @r1, r0
        mov      r15, @r0

        mov.l    #_ProbeRS232_TxISRHandler, r0
        jsr     @r0                     
        nop
        
        mov.l    #_OSIntExit, r0
        jsr     @r0                         ; call OSIntExit()
        nop

        OS_CTX_RESTORE                      ; restore all processor registers from new task's stack

        rte                                 ; return from interrupt
        nop
        
_ProbeRS232RxISR:
        
        OS_CTX_SAVE                         ; save processor registers on the stack

        mov.l   #_OSIntNestingCtr, r1       ; Set OSIntNestingCtr == 1 (interrupt nesting not supported)
        mov.l   #1, r2
        mov.b   r2, @r1

        mov.l    #_OSTCBCurPtr, r1          ; Save current task's SP into its TCB
        mov.l   @r1, r0
        mov      r15, @r0

        mov.l    #_ProbeRS232_RxISRHandler, r0
        jsr     @r0                     
        nop
        
        mov.l    #_OSIntExit, r0
        jsr     @r0                         ; call OSIntExit()
        nop

        OS_CTX_RESTORE                      ; restore all processor registers from new task's stack
        rte                                 ; return from interrupt
        nop 

_ProbeRS232TeiISR:
        
        OS_CTX_SAVE                         ; save processor registers on the stack

        mov.l   #_OSIntNestingCtr, r1       ; Set OSIntNestingCtr == 1 (interrupt nesting not supported)
        mov.l   #1, r2
        mov.b   r2, @r1
        
        mov.l    #_OSTCBCurPtr, r1          ; Save current task's SP into its TCB
        mov.l   @r1, r0
        mov      r15, @r0

        mov.l    #_ProbeRS232_TeiISRHandler, r0
        jsr     @r0                     
        nop
        
        mov.l    #_OSIntExit, r0
        jsr     @r0                         ; call OSIntExit()
        nop

        OS_CTX_RESTORE                      ; restore all processor registers from new task's stack

        rte                                 ; return from interrupt
        nop

_ProbeRS232EriISR:

        OS_CTX_SAVE                         ; save processor registers on the stack

        mov.l   #_OSIntNestingCtr, r1       ; Set OSIntNestingCtr == 1 (interrupt nesting not supported)
        mov.l   #1, r2
        mov.b   r2, @r1
        
        mov.l    #_OSTCBCurPtr, r1          ; Save current task's SP into its TCB
        mov.l   @r1, r0
        mov      r15, @r0

        mov.l    #_ProbeRS232_EriISRHandler, r0
        jsr     @r0                     
        nop
        
        mov.l    #_OSIntExit, r0
        jsr     @r0                         ; call OSIntExit()
        nop

        OS_CTX_RESTORE                      ; restore all processor registers from new task's stack

        rte                                 ; return from interrupt
        nop
       
        .END
